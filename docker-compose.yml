services:
  ##############################
  #    Components Services     #
  ##############################
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    depends_on:
      - db-api
      - engine
    environment:
      AUTH_URL: http://keycloak:8080/realms/what2watch/protocol/openid-connect/userinfo
      DB_API_URL: http://db-api:8000
      ENGINE_API_URL: http://engine:8000
      TMDB_API_KEY: ${TMDB_API_KEY:-}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.${DOMAIN:-localhost}`)
      - traefik.http.routers.api.entrypoints=web,websecure
    develop:
      watch:
        - action: rebuild
          path: ./api
          target: /app
  engine:
    build:
      context: ./engine
      dockerfile: Dockerfile
    container_name: engine
    restart: unless-stopped
    depends_on:
      - db-api
    environment:
      DB_API_URL: http://db-api:8000
      TMDB_API_KEY: ${TMDB_API_KEY:-}
    labels:
      - traefik.enable=true
      - traefik.http.routers.engine.rule=Host(`engine.${DOMAIN:-localhost}`)
      - traefik.http.routers.engine.entrypoints=web,websecure
    develop:
      watch:
        - action: rebuild
          path: ./engine
          target: /app
  db-api:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: db-api
    restart: unless-stopped
    depends_on:
      - mariadb
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER:-moviefinder}
      DB_PASSWORD: ${MYSQL_PASSWORD:-moviefinder}
      DB_NAME: ${MYSQL_DATABASE:-moviefinder}
    labels:
      - traefik.enable=true
      - traefik.http.routers.db-api.rule=Host(`db-api.${DOMAIN:-localhost}`)
      - traefik.http.routers.db-api.entrypoints=web,websecure
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    restart: unless-stopped
    environment:
      API_URL: http://api.localhost
      AUTH_URL: ${AUTH_URL:-http://auth.localhost/realms/what2watch/protocol/openid-connect/userinfo}
      AUTH_KEYCLOAK_ISSUER: ${AUTH_KEYCLOAK_ISSUER:-http://auth.localhost/realms/what2watch}
      AUTH_KEYCLOAK_ID: ${AUTH_KEYCLOAK_ID:-what2watch}
      AUTH_KEYCLOAK_SECRET: ${AUTH_KEYCLOAK_SECRET:-IeTnynMXDBFfUNvKTiOTUzXblrjEk7Sd}
      AUTH_SECRET: ${AUTH_SECRET:-Zts8AYz9Xm4SzqEhjHO/pRQv7tEsqgkCCong4ByHQcY=}
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`what2watch.${DOMAIN:-localhost}`)
      - traefik.http.routers.front.entrypoints=web,websecure
  ##############################
  #    Proxy/Auth Services     #
  ##############################
  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    restart: unless-stopped
    command: start-dev --proxy-headers xforwarded --import-realm
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD:-admin}
      KC_HOSTNAME: auth.localhost
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY_ADDRESS_FORWARDING: "true"
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak.rule=Host(`auth.${DOMAIN:-localhost}`)
      - traefik.http.routers.keycloak.entrypoints=websecure
      - traefik.http.routers.keycloak.tls=true
      - traefik.http.services.keycloak.loadbalancer.server.port=8080

      - traefik.http.routers.keycloak_http.rule=Host(`auth.${DOMAIN:-localhost}`)
      - traefik.http.routers.keycloak_http.entrypoints=web
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
  ##############################
  #       DB/Cache Services    #
  ##############################
  mariadb:
    image: mariadb:10.3
    container_name: mariadb
    restart: unless-stopped
    depends_on:
      - agent
    labels:
      - traefik.enable=false
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-moviefinder}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-moviefinder}
      MYSQL_USER: ${MYSQL_USER:-moviefinder}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-moviefinder}
    volumes:
      - mariadb:/var/lib/mysql
      - ./config/mariadb/tables:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    depends_on:
      - agent
    labels:
      - traefik.enable=false
    volumes:
      - redis:/data
  # cache:
  #   image: fabiocicerchia/go-proxy-cache
  #   container_name: cache
  #   restart: unless-stopped
  #   depends_on:
  #     - agent
  #   labels:
  #     - traefik.enable=false
  ##############################
  #       Observability        #
  ##############################
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    labels:
      - traefik.enable=false
  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    command: -config.file=/mnt/config/loki-config.yaml
    volumes:
      - loki:/loki
      - ./config/observability/loki.yaml:/mnt/config/loki-config.yaml:ro
    labels:
      - traefik.enable=false
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN:-localhost}`)
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_INSTALL_PLUGINS: redis-datasource
      MYSQL_DATABASE: ${MYSQL_DATABASE:-moviefinder}
      MYSQL_USER: ${MYSQL_USER:-moviefinder}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-moviefinder}
    volumes:
      - grafana:/var/lib/grafana
      - ./config/observability/provisioning:/etc/grafana/provisioning:ro
      - ./config/observability/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/observability/dashboards:/var/lib/grafana/dashboards:ro
  agent:
    image: grafana/agent:latest
    container_name: agent
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
      - grafana
    environment:
      - AGENT_MODE=flow
    labels:
      - traefik.enable=true
      - traefik.http.routers.agent.rule=Host(`agent.${DOMAIN:-localhost}`)
      - traefik.http.routers.agent.entrypoints=web
      - traefik.http.services.agent.loadbalancer.server.port=12345
    volumes:
      - ./config/observability/agent.river:/etc/agent/config.river:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - /etc/agent/config.river

volumes:
  mariadb:
  redis:
  grafana:
  loki:
  hydra:
